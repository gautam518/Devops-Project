Python
Course Logistics: 
Chapter 0 - Introduction: 
Chapter 1 - Modules, Comments & Pip:
Chapter 1 - Practice Set: 
Chapter 2 - Variables & Data Types: ​
Chapter 2 - Practice Set: 
Chapter 3 - Strings: ​
Chapter 3 - Practice Set: ​
Chapter 4 - Lists & Tuples: ​
Chapter 4 - Practice Set: 
Chapter 5 - Dictionary & Sets: ​
Chapter 5 - Practice Set:​
Chapter 6 - Conditional Expressions: ​
Chapter 6 - Practice Set: 
Chapter 7 - Loops in Python: ​
Chapter 7 - Practice Set: 
Chapter 8 - Functions & Recursion: ​
Chapter 8 - Practice Set: 06:36:28​
Project 1 - Snake, Water, Gun Game: 
Chapter 9 - File I/O:
Chapter 9 - Practice Set: 
Chapter 10 - Object Oriented Programming:
Chapter 10 - Practice Set: 
Chapter 11 - Inheritance: 
Chapter 11 - Practice Set: 
Project 2 - The Perfect Guess  

1-Chapter1 Modules,comments and pip
A module is a file containing code within by somebody else (usually) which can be imported and used by our programs.
pip is the package manager for python.You can use pip to install a module on your system.

There are 2 types of modules.
1-Buitin modules -Pre installed in python. eg os
2-External modules- Need to install using pip. eg flask,tensorflow

Practice set
1-Write a program to execute twinkle twinkle little star poem in python.

print ('''Twinkle, twinkle, little star
How I wonder what you are
Up above the world so high
Like a diamond in the sky
Twinkle, twinkle little star
How I wonder what you are''')

Note:If you want to print more than 1 line then instead of write " you have to write '''. 

2-Write a python program to print the contents of a directory using os module.Search online for the function which does that.

import os
print(os.listdir())

Chapter 2 – Variables and Data Types

A variable is a name given to a memory location in a program. For example
a=30
b=”Harry”
c=71.22
Variable – Container to store a value
Keywords – Reserved words in Python
Identifiers – class/function/variable name


Data Types:
Primarily there are the following data types in Python:
Integers   Interger always comes in double quotes
Floating point numbers
Strings
Booleans
None
Python is a fantastic language that automatically identifies the type of data for us.
a = 71                                    #Identifies a as class<int>
b = 88.44                              #Identifies b as class<float>
name = “Harry”                  #Identifies name as class<Str>

#vi python3.py
a = 'harry'
b = 34
c = 35.4

print(a)
print(b)
print(c)
print(type(a))          --To check type of a 

output
harry
34
35.4
<class 'str'>

Rules for defining a variable name: (Also applicable to other identifiers)

A variable name can contain alphabets, digits, and underscore.
A variable name can only start with an alphabet and underscore.
A variable can’t start with a digit.
No white space is allowed to be used inside a variable name.
Examples of few valid variable names,

Harry, harry, one8, _akki, aakash, harry_bro, etc.

#Operators in Python
The following are some common operators in Python:

Arithmetic Operators (+, -, *, /, etc.)
Assignment Operators (=, +=, -=, etc.)
Comparison Operators (==, >=, <=, >, <, !=, etc.)
Logical Operators (and, or, not)

Arithmetic Operators
cat 4.py
a= 5
b = 6
print("a + b = " ,3 * 4)

Assignment Operators
cat 5.py
a = 34
a += 30
print (a)

Comparison Operators
cat 6.py
b = (14>=7)
print(b)

Logical operator

#convert string into int
a = "5"
a = int(a)
b = 6
print(a + b)

output = 11

There are many functions to convert one data type into another.
Str(31)         ”31” Integer to string conversion
int(“32”)       32 String to int conversion
float(32)       32.0 Integer to float conversion

Input function
To type value
input function
Write a program to ask to enter your name

a = input("enter your name")
print("my name is",a)
o/p= my name is gautam

Write a program to sum the 2 numbers.
a = input("enter the number")
a = int(a)   <--convert a to integer
b = 5
print("a +b", a + b)

o/p = 
11

Practice set.
1-Write a python program to add 2 numbers.
a = 5
b = 6
print(a + b)

2-Write a python program to find reminder when divided by 2
a = 6
b = 3
print("the reminder when a is divided by b is", a%b)

o/p=
the reminder when a is divided by b is 0

3-Use comparison operator to find whether a is greater than b or not.
take a = 34 b =80

a = 34
b = 80
print(a>b)

o/p - false

4-Write a python program to find average of two numbers enterd by the user
a = int(input("enter the first number"))
b = int(input("enter the 2nd number"))
c = (a+b)/2
print("average of 2 numbers is",c)

o/p =
enter the first number5
enter the 2nd number7
average of 2 numbers is 6.0

5- Write a python program to entered square of numbers.

a =int(input("enter the number"))
b = a*a
print("the square of number is", b)

o/p
enter the number 5
the square of number is 25

chapter3: String
string always written in ('''abc ''') or double quotes("abc")

slicing:->It is a part of strings.The index of the string starts from 0 to -1
H A R R Y
0 1 2 3 4
-5-4-3-2-1

example1:
a = "harry"
print(a[0])

output=h
example2:
a = "harry"
print(a[0:3])

output will be from 0 to 2
har
Note:You can find the lengh of string using len function
example
a = "harry"
print(len(a))

output = 5

name = "harry"
#print(name[:3])  ----->It is same as print(name[0:3])
#print(name[1:])------->It is same as print(name[1:5])
#print(name[-4:-1] ----->It is same as print(name[1:4])

slicing with skip value
We can provide a skip value as a part of our slice like this
word = "amazing"
        0123456

word[1:6:2] = mzn  <-------------It skips the every 2nd value
word[0::2]  = aaig <-------------It skips the every 2nd value

some string functions.
1-Len functions
story ="once upon a time there was a person whose name was roshan who teach python"
print
print(len(story))

output 74

2-string.count("c") --> Counts the total number of occurance of any character
story ="once upon a time there was a person whose name was roshan who teach python"
print
print(story.count("c"))

output
2

3-string.capitalize()-->This function capitalize the first character of given string.

story ="once upon a time there was a person whose name was roshan who teach python"
print
print(story.capitalize())

output
Once upon a time there was a person whose name was roshan who teach python

4-string.endswith("word")<---------It show the result true or false
story ="once upon a time there was a person whose name was roshan who teach python"
print
print(story.endswith("python"))

output
true

story ="once upon a time there was a person whose name was roshan who teach python"
print
print(story.endswith("time"))

output
false

5-string.find("word")--->this function finds and returns the index first occurance of words.
story ="once upon a time there was a person whose name was roshan who teach python"
print
print(story.find("python"))

output
68

story ="once upon a time there was a person whose name was roshan who teach python"
print
print(story.find("once"))

output
5

6-string.replace <------------This function replace the oldword with newword in the entire strings.
story ="once upon a time there was a person whose name was roshan who teach python"
print
print(story.replace("python","java"))

output
once upon a time there was a person whose name was roshan who teach java

sequences.
examples:-
\n-->
\t-->
\' -->single quote
\\-->double quote

Practise set
1-Write a Python program to display a user enetered name followed by Good afternoon using input() functions.
name =input("entered your name ")  To print in new line put \n
print("Good afternoon", name)

output-->Good afternoon gautam

2-Write a program to detect double spaces in the strings.
story="Hi team how r u"
print(story.find("  "))

output
2 means first double space starts from 2characters
Note -1 output means no double spaces

3-Write a python program to replace double space to single space
story="Hi team how r  u"
print(story.replace("  "," "))

output
story="Hi team how r  u"
print(story.replace("  "," "))

output
Hi team how r u

List and tuples.
Lists is an ordered collections of data.
Create a list using []
We can create alist of items with diffrent types
a =[1,"hi",true,0.98]

Example
a = [1,2,3,4]
print(a[0])

output=1

You can change value in lists
a = [1,2,3,4]
a[0] = 9
print(a)

output
[9, 2, 3, 4]

List slicing
friends = ["harry","tom","sam","divya","shweta"]
print(friends[0:3])

["harry","tom","sam"]

List methods
Consider the following list:
L1 = [1, 8, 7, 2, 21, 15]

sort() – updates the list to [1,2,7,8,15,21]
reverse() – updates the list to [15,21,2,7,8,1]
append(8) – adds 8 at the end of the list
insert(3,8) – This will add 8 at 3 index
pop(2) – It will delete element at index 2 and return its value
remove(21) – It will remove 21 from the last
Example
l2 = [1, 8, 7, 2]
l2.sort()
print(l2)

output
[1, 2, 7, 8]

l2 = [1, 8, 7, 2]
l2.reverse()
print(l2)

output
[8,7,2,1]

l2 = [1, 8, 7, 2]
l2.append(45)
print(l2)

output
[1,8,7,2,45]

l2 = [1, 8, 7, 2]
l2.insert(2,45)
print(l2)

output
[1, 8, 45, 7, 2]

l2 = [1, 8, 7, 2]
l2.pop(2)
print(l2)

[1, 8, 2]

l2 = [1, 8, 7, 2]
l2.remove(2)
print(l2)

[1,8,7]

Tuples.
A tuples is a data type which cannot change
a = () <--Empty tuples
a = (1,)<--Tuples elements with only one elements need a comma
a = (1,2,3)Tuples elements with more than one elements.  

Tuples methods
a.count(1)<--It returns number of times 1 in a
a.index(1)<--It returns index of first occurance in a

l2 = (1,2,3,4,1)
b = l2.count(1)
print(b)

output
2

l2 = (1,2,3,4,1)
b = l2.index(1)
print(b)

output
0

Practise set
1-write a program to store 7 fruits in a list entered by the user.
f1,f2,f3,f4,f5,f6,f7 = input("enter the 7 fruits ").split(",")
myfruitslist = [f1,f2,f3,f4,f5,f6,f7]
print(myfruitslist)

output
enter the 7 fruits apple,grapes,mango,gauva,banana,pear,strowberry                                                    
['apple', 'grapes', 'mango', 'gauva', 'banana', 'pear', 'strowberry'] 

Another method
f1= input("enter the 1st fruits ")
f2= input("enter the 2nd fruits ")
f3= input("enter the 3rd fruits ")


myfruitslist = [f1,f2,f3]
print(myfruitslist)

output
enter the 1st fruits mango                                                                                            
enter the 2nd fruits gauva                                                                                            
enter the 3rd fruits orange                                                                                           
['mango', 'gauva', 'orange'

2-Write a program to accept marks of 6 students and display it in sorted manner
s1= int(input("enter the marks of first student "))
s2= int(input("enter the 2nd studensts "))
s3= int(input("enter the 3rd students "))

total_marks = [s1,s2,s3]
total_marks.sort()
print(total_marks)

output
enter the marks of first student 56                                                                                   
enter the 2nd studensts 75                                                                                            
enter the 3rd students 67                                                                                             
['56', '67', '75']   

3-Write aprogram to sum a list of 4 numbers.
a = [2,3,4,5]
print(a[0]+a[1]+a[2]+a[3])

output
14

another method = sum method
a = [2,3,4,5]
print(sum(a))

output
14

4-Write a program to count number of zeroes in the following tuples.
a = (7,0,8,0,0,9)

a = (7,0,8,0,0,9)
print(a.count(0))

output=3
















